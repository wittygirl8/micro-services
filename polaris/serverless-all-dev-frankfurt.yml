service: datman-polaris

plugins:
    - serverless-bundle
    #- serverless-aws-alias
package:
    individually: true
provider:
    name: aws
    runtime: nodejs12.x
    region: eu-central-1
    tracing:
        apiGateway: true
        lambda: true
    timeout: 30
    aliasStage:
        loggingLevel: 'ERROR'
        dataTraceEnabled: true
        vpc:
        securityGroupIds:
            - sg-0a1f4e79e54bd0251
        subnetIds:
            - subnet-0dbf2ccd2e554e05c
    environment:
        STAGE: ${self:custom.stage}
        ALIAS: ${self:custom.alias}
        DB_HOST: ${file(../../resources/credentials/db.yml):db-host-${self:custom.alias}}
        DB_DATABASE: ${file(../../resources/credentials/db.yml):db-database-${self:custom.alias}}
        DB_USERNAME: ${file(../../resources/credentials/db.yml):db-username-${self:custom.alias}}
        DB_PASSWORD: ${file(../../resources/credentials/db.yml):db-password-${self:custom.alias}}
        PP_END_POINT_URL: ${file(../../resources/credentials/pin-payout-credentials.yml):PP_END_POINT_URL}
        PP_API_KEY: ${file(../../resources/credentials/pin-payout-credentials.yml):PP_API_KEY}
    iamRoleStatements:
        - Effect: Allow
          Action:
              - rds-db:connect
          Resource: 'arn:aws:rds:eu-west-1:584634042267:db-proxy:prx-0fabf58edf359f91e/*'
        - Effect: Allow
          Action:
              - sqs:sendMessage
          Resource: '*'

custom:
    defaultStage: ${file(../../../serverless.common.yml):custom.defaultStage}
    stage: ${file(../../../serverless.common.yml):custom.stage}
    baseApiPath: ${file(../../../serverless.common.yml):custom.baseApiPath}
    alias: ${file(../../../serverless.common.yml):custom.alias}
    polarisEntityPath: ${self:custom.baseApiPath}/antar
    cronoptions:
        prod: false
        dev: true
        pre-prod: false
        cp-e2e: true
        stage: true
        other: false
    cronenabled: ${self:custom.cronoptions.${self:custom.stage}, self:custom.cronoptions.other}

    bundle:
        forceExclude:
            - datman-helpers
            - datman-models
        linting: false #Ignore for compilation
        ignorePackages:
            - pg-hstore
            # only on aws
            - ../../../layers/helper_lib/src
            - ../../../layers/models_lib/src
            - ../../../../layers/helper_lib/src
            - ../../../../layers/models_lib/src

functions:
    - ${file(functions.yml)}
resources:
    # API Gateway Errors
    - ${file(api-gateway-errors.yml)}
